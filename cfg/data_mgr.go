// Code generated by excelexporter. DO NOT EDIT
package cfg

import (
	"errors"
	"excelexporter/example/pb"
	"sync/atomic"
)

var (
	isLoading = int32(0)
	//任务数据
	QuestCfgMgr *DataMap[*pb.QuestCfg]

	//物品数据
	ItemCfgMgr *DataMap[*pb.ItemCfg]
)

func Load(dataDir string) error {
	if !atomic.CompareAndSwapInt32(&isLoading, 0, 1) {
		return errors.New("loading concurrency")
	}
	defer atomic.StoreInt32(&isLoading, 0)
	var err error
	// 考虑到并发安全,这里先加载到临时变量

	tmpQuestCfgMgr := NewDataMap[*pb.QuestCfg]()
	err = tmpQuestCfgMgr.LoadJson(dataDir + "QuestCfg.json")
	if err != nil {
		return err
	}
	tmpItemCfgMgr := NewDataMap[*pb.ItemCfg]()
	err = tmpItemCfgMgr.LoadJson(dataDir + "ItemCfg.json")
	if err != nil {
		return err
	}
	// 预处理数据

	err = PreProcess("QuestCfg", tmpQuestCfgMgr)
	if err != nil {
		return err
	}
	err = PreProcess("ItemCfg", tmpItemCfgMgr)
	if err != nil {
		return err
	}
	// 最后再赋值给全局变量(引用赋值是原子操作)

	QuestCfgMgr = tmpQuestCfgMgr
	ItemCfgMgr = tmpItemCfgMgr
	return err
}
